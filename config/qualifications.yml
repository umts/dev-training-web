---
title: Read the transportation programmer policies
description: >
  This document lives in [one-drive](https://umass.sharepoint.com/:b:/r/sites/TransportationIT/Shared%20Documents/Programmer%20Training/UMass%20Transportation%20Student%20Programmer%20Policies.pdf).
---
title: Read through university owned computer policies
description: >
  Since you will be trusted with university-owned computers and potentially
  sensitive data, you must review these documents
subtasks:
  - '[Security Checklist](https://www.umass.edu/it/support/security/security-checklist-university-owned-computers)'
  - '[Understanding Sensitive Data](https://www.umass.edu/it/support/security/understand-sensitive-data-umass-amherst)'
  - '[Data Classification](https://www.umass.edu/it/support/security/data-classification-umass-amherst)'
---
title: Join Teams
description: >
  We use [Microsoft Teams](https://aka.ms/mstfw) for communication every day.
  Log into teams with your "-af" account.
---
title: Prepare a development environment
description: >
  Work with another developer to set up the following items:
subtasks:
  - Install the xcode command line tools (`xcode-select â€“install`)
  - Install [`homebrew`](https://brew.sh)
  - Install [`mariadb`](https://formulae.brew.sh/formula/mariadb)
  - Install [`nodenv`](https://github.com/rbenv/nodenv)
  - Install [`rbenv`](https://github.com/rbenv/rbenv)
  - Prepare an [`ssh` key](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)
  - Install a text editor/ide of your choice (e.g. [VSCode](https://code.visualstudio.com))
---
title: Configure GitHub
description: >
  Your github account must be configured and added to our organization.
subtasks:
  - Set up two-factor authentication
  - Tell us your username so we can add you to our organization
  - Your notification settings for GitHub can be found [here](https://github.com/settings/notifications).
    The minimum we require is that you have 'Email' checked under the header 'Participating'
  - You should clone repositories using the `ssh` URL from now on. Please follow the instructions
    for [connecting to GitHub using `ssh`](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account)).
---
title: Complete a command line tutorial
description: >
  Having a good grasp of the command line is essential for working in our team,
  as we use the command line every single day for various tasks
  Use the first couple chapters of [this tutorial](https://www.learnenough.com/command-line-tutorial/basics)
  or another approved tutorial to brush up on your basics, and link to it in a
  comment to close this issue.
---
title: Complete a git tutorial
description: >
  We use Git in combination with Github to work collaboratively on our code.
  Log in to O'Reilly's learning tools for free with your UMass account and
  complete [this](https://learning.oreilly.com/videos/git-essentials-become/9781800565630/)
  or another approved tutorial and link to it in a comment to close this issue.
---
title: Complete a ruby tutorial
description: >
  There are many Ruby tutorials available which you can choose from. Log in for
  free using your UMass account and watch [these videos](https://learning.oreilly.com/videos/ruby-fundamentals/300000006A0154),
  or you can download the [Ruby Koans](http://rubykoans.com/). If neither of those
  options appeal to you you may choose another tutorial with your supervisor's approval.
---
title: Complete a rails tutorial
description: >
  The current tutorial in use is Michael Hartl's [Ruby on Rails Tutorial](https://learning.oreilly.com/library/view/ruby-on-rails/9780136702726/).
  Log in for free using your UMass account to O'Reilly or, if you wish to use an alternate tutorial, talk to your supervisor.

  You can follow the tutorial pretty closely, except for the following caveats below.
  - In section 1.1.1 "Development environment", don't set up cloud9.
    Your laptop has been set up with a development environment.
  - In section 1.4.1 "Heroku setup and Deployment", there are instructions to set up a Heroku account to deploy your code to.
    Since you'll be deploying code to production in a few short months, you can skip setting up a heroku account
    and all related steps.
---
title: Demonstrate an understanding of correct and proper git usage
description: >
  Show that you understand how to properly use Git by writing commits that
  generally relate to atomic features or thoughts. Make sure you know how to
  resolve a merge conflict correctly.
---
title: Submit a pull request for review
description: >
  Use effective descriptions that provide context of code and rationale for change.
  Tag some related issues.
---
title: Demonstrate an understanding of Ruby core methods / Rails object extensions
description: >
  Some methods used in our Rails applications are Ruby methods. Some are
  written in Rails, like `try` and `1.week`. Close this issue by referencing
  some work where you have used both (can be separate projects).
---
title: Demonstrate an understanding of SQL databases and their integrations with ActiveRecord
description: >
  Write a migration and use a model relationship correctly.
---
title: Demonstrate an understanding of how to employ ActiveRecord
description: https://guides.rubyonrails.org/active_record_querying.html
subtasks:
  - Use `joins` or `includes`
  - Use `order` or `sort`
  - Use `where`, `find`, or `find_by` and explain the differences between these three
---
title: Demonstrate an understanding of MVC architecture
subtasks:
  - Demonstrate or explain what kinds of code belong where (models/controllers/helpers/views)
  - Use a partial
  - Demonstrate understanding of how to use routes (a link, a redirect, or creating routes)
  - Use params in a controller
---
title: Demonstrate an understanding of front-end development
subtasks:
  - Generate HTML using HAML/ERB
  - Use bootstrap/CSS to apply styling
  - Use javascript to create/adjust interactive elements
---
title: Demonstrate an understanding of how and why to write tests
subtasks:
  - Write a model spec
  - Write a request spec
  - Write a system spec
---
title: Give feedback on another programmer's code
description: >
  Ask helpful questions/suggest alternatives on someone else's code
